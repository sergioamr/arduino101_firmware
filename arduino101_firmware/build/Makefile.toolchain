
# x86
CROSS_COMPILE_TARGET_x86 = i586-pc-elf
CROSS_COMPILE_x86_version = 4.8.0
CROSS_COMPILE_x86=${T}/arduino101_firmware/external/gcc-i586-pc-elf/bin/$(CROSS_COMPILE_TARGET_x86)-

# external/gcc-i586-pc-elf/lib/gcc/i586-pc-elf/4.8.0/
LIB_INCLUDE_DIR_x86 = -L ${T}/arduino101_firmware/external/gcc-i586-pc-elf/lib/gcc/${CROSS_COMPILE_TARGET_x86}/${CROSS_COMPILE_x86_version}/

# arc
CROSS_COMPILE_TARGET_arc = arc-elf32
CROSS_COMPILE_arc_version = 4.8.0
CROSS_COMPILE_arc=${T}/arduino101_firmware/external/gcc-arc-elf32/bin/${CROSS_COMPILE_TARGET_arc}-

LIB_INCLUDE_DIR_arc = -L ${T}/arduino101_firmware/external/gcc-arc-elf32/lib/gcc/arc-elf32/4.8.0/em/


CROSS_COMPILE = $(CROSS_COMPILE_$(ARCH))
LIB_INCLUDE_DIR = $(LIB_INCLUDE_DIR_$(ARCH))

TOOLCHAIN_LIBS = gcc

# Make variables (CC, etc...)
AS              = $(CROSS_COMPILE)as
LD              = $(CROSS_COMPILE)ld
CC              = $(CROSS_COMPILE)gcc
CPP             = $(CC) -E
AR              = $(CROSS_COMPILE)ar
NM              = $(CROSS_COMPILE)nm
STRIP           = $(CROSS_COMPILE)strip
OBJCOPY         = $(CROSS_COMPILE)objcopy
OBJDUMP         = $(CROSS_COMPILE)objdump

export LIB_INCLUDE_DIR CROSS_COMPILE TOOLCHAIN_LIBS CC AR
